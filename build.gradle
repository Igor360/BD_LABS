group 'com.bd'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compileOnly 'org.projectlombok:lombok:1.16.18'
    compile (
            [group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.4.1'],
            [group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.4.1'],
            [group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.4.1'],
            [group: 'org.json', name: 'json', version: '20170516'],
            [group: 'com.google.code.gson', name: 'gson', version: '2.8.2'],
            [group: 'commons-io', name: 'commons-io', version: '2.5'],
            [group: 'org.mongodb', name: 'mongo-java-driver', version: '3.5.0'],
            [group: 'org.apache.commons', name: 'commons-csv', version: '1.5']
    )


}

jar {
    manifest {
        attributes(
                'Main-Class': 'WorkInterface'
        )
    }
}

task codeCoverageReport(type: JacocoReport) {
    def coverageSourceDirs = [
            'src/main/java',
    ]
    executionData = fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
    classDirectories = fileTree(dir: "${project.buildDir}/classes/java/main")
    sourceDirectories = files(coverageSourceDirs)

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.task(test)
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport
task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}



